options:
	consgoldbar: 4
	outgoldbar: 1
	waitfor: 2
	conscrystal: 16
	outcrystal: 1
	waitforc: 4
on load:
	set {_chestplate} to wooden pressure plate named "&3Pattern" with lore "&5Item:chestplate"
	register new shaped recipe for {_chestplate} using oak_plank, air, oak_plank, oak_plank, oak_plank, oak_plank, oak_plank, oak_plank, oak_plank
	set {_chestplate} to wooden pressure plate named "&3Pattern" with lore "&5Item:leggings"
	register new shaped recipe for {_chestplate} using oak_plank, oak_plank, oak_plank, oak_plank, air, oak_plank, oak_plank, air, oak_plank
	set {_chestplate} to wooden pressure plate named "&3Pattern" with lore "&5Item:helm"
	register new shaped recipe for {_chestplate} using oak_plank, oak_plank, oak_plank, oak_plank, air, oak_plank, air, air, air
	set {_chestplate} to wooden pressure plate named "&3Pattern" with lore "&5Item:boots"
	register new shaped recipe for {_chestplate} using air, air, air, oak_plank, air, oak_plank, oak_plank, air, oak_plank
	
	#
	# Patterns
	#
	set {pattern::1} to wooden pressure plate named "&3Pattern" with lore "&5Item:helm"
	set {pattern::2} to wooden pressure plate named "&3Pattern" with lore "&5Item:chestplate"
	set {pattern::3} to wooden pressure plate named "&3Pattern" with lore "&5Item:leggings"
	set {pattern::4} to wooden pressure plate named "&3Pattern" with lore "&5Item:boots"
	set {pattern::5} to wooden pressure plate named "&3Pattern" with lore "&5Item:sword"
	set {pattern::6} to wooden pressure plate named "&3Pattern" with lore "&5Item:axe"
	set {pattern::7} to wooden pressure plate named "&3Pattern" with lore "&5Item:hoe"
	set {pattern::8} to wooden pressure plate named "&3Pattern" with lore "&5Item:pickaxe"
	set {pattern::9} to wooden pressure plate named "&3Pattern" with lore "&5Item:shovel"

	set {pattern_m::1} to wooden pressure plate named "&3Pattern" with lore "&5Material:nail"
	set {pattern_m::2} to wooden pressure plate named "&3Pattern" with lore "&5Material:rivet"
	#
	# Materials
	#
	set {material::1} to gold ingot named "<gold>Gold bar" with lore "&5Material:gold"
	set {material::2} to iron ingot named "<gold>Iron bar" with lore "&5Material:iron"
	set {material::3} to diamond named "<gold>Diamond Plate" with lore "&5Material:diamond"
	#
	# Cost
	#
	set {cost::sword} to "2||1||1||1"
	set {cost::axe} to "3||2||1||1"
	set {cost::pickaxe} to "3||2||1||1"
	set {cost::shovel} to "1||2||1||1"
	set {cost::hoe} to "2||2||1||1"
	set {cost::helm} to "5||0||0||2"
	set {cost::chestplate} to "8||0||0||4"
	set {cost::leggings} to "7||0||0||3"
	set {cost::boots} to "4||0||0||2"

	set {cost_m::nail} to "1||1"
	set {cost_m::rivet} to "1||1"
on rightclick on a oak plank:
	set {_wood} to targeted block
	set {_h} to hopper 
	set {_hopper} to checkBlock({_wood}, {_h})
	if {_hopper} != empty:
		message "test" to player
		
on rightclick on a obsidian:
	set {_obsi} to targeted block
	set {_iron} to block below {_obsi}
	set {_hand} to amount of player's held item in player's inventory
	if {_iron} is iron_block:
		cancel event
		if player's held item is gold ingot:
			if players's held item is not gold ingot named "<gold>Gold bar":
				if {_hand} >= {@consgoldbar}:
					goldbar({@consgoldbar}, player, target block)
				else:
					send "insufient gold ingots" to player
		else if player's held item is iron ingot:
			if players's held item is not iron ingot named "<gold>Iron bar":
				if {_hand} >= {@consgoldbar}:
					ironbar({@consgoldbar}, player, target block)
				else:
					send "insufient gold ingots" to player		
		else if player's held item is diamond:
			if players's held item is not diamond named "<gold>diamond plate":
				if {_hand} >= {@consgoldbar}:
					diamondplate({@consgoldbar}, player, target block)
				else:
					send "insufient gold ingots" to player
		else if player's held item is stone:
			if {_hand} >= {@conscrystal}:
				crystal({@conscrystal}, player, target block)
		else if name of player's held item is "&3Pattern":
			set {_inv} to checkBlock({_iron}, hopper)
			if {_inv} is hopper:
				set {_p} to empty
				set {_m} to empty
				set {_s} to empty
				if number of air in {_inv}'s inventory  = 27:
					message "Tool crafter is empty" to player
					stop
				loop {pattern::*}:
					loop items in {_inv}'s inventory:
						if lore of loop-value-1 = lore of loop-value-2:
							set {_p} to loop-value-2
							exit 2 loops
				if {_p} = empty:
					message "No pattern detected. Please craft patterns using wooden tool" to player
					stop
				loop {material::*}:
					loop items in {_inv}'s inventory:
						if lore of loop-value-1 = lore of loop-value-2:
							set {_m} to loop-value-2
							exit 2 loops
				if {_m} = empty:
					message "No valid material detected. Please right click meterials to too crafter" to player
					stop
				loop items in {_inv}'s inventory:
					if loop-value = stick:
						set {_s} to loop-value
						exit 1 loop
				set {_itm::*} to toolcraft({_p}, {_m} ,{_s}, player)
				
				loop items in {_inv}'s inventory:
					set loop-value to air
				add {_itm::2} to {_inv}'s inventory
				add {_itm::3} to {_inv}'s inventory
				add {_itm::4} to {_inv}'s inventory
				set {_xx} to {_itm::1}
				set {_container} to block above {_obsi}
				if {_container} = chest:
					if {_container} has enough space for {_xx}:
						add {_xx} to {_container}'s inventory
						stop
				drop {_xx} at block above {_obsi}
			else:
				message "Not a tool crafter" to player

on craft wooden tools:
	set {_n} to "%item%" parsed as a text
	set {_w::*} to {_n} split by "_"
	set item to wooden pressure plate named "&3Pattern" with lore "&5Item:%{_w::2}%"
on craft diamond tools:
	cancel event
	message "Please craft patterns using wooden tool and use a tool crafter" to player
on craft iron tools:
	cancel event
	message "Please craft patterns using wooden tool and use a tool crafter" to player
on craft gold tools:
	cancel event
	message "Please craft patterns using wooden tool and use a tool crafter" to player
on rightclick holding blue glass block:
	if player's held item is blue glass block named "<blue>Mana Stone":
		cancel event
		if {useMana.%player%} is not set:
			set {useMana.%player%} to false
		if {useMana.%player%} is false:
			if item amount of players's tool is 1:
				set player's held item to air
			else:
				remove 1 from item amount of player's tool
			set {useMana.%player%} to true
			send "Charging your mana" to player
			wait 400 ticks
			add 1 to {cMana.%player%}
			send "<blue>Mana:  <white>%{cMana.%player%}%" to player
			set {useMana.%player%} to false
		else:
			send "Charging your mana please wait" to player
function toolcraft(t: item, m: item, s: item, p: player) :: items:
	set {_pat::*} to lore of {_t} split by ":"
	set {_mat::*} to lore of {_m} split by ":"
	set {_c} to {cost::%{_pat::2}%}
	set {_x::*} to {_c} split by "||"
	set {_ma} to "%{_x::1}%" parsed as an integer
	set {_sa} to "%{_x::2}%" parsed as an integer
	if item size of {_m} > {_ma}:
		set item size of {_m} to item size of {_m} - {_ma}
	else:
		stop
	if {_s} is not air:
		if item size of {_s} > {_sa}:
			set item size of {_s} to item size of {_s} - {_sa}
		else:
			stop
	set {_ret::1} to ("%{_mat::2}% %{_pat::2}%" parsed as an item) named "&5Pure %{_mat::2}% %{_pat::2}%" with lore "&7Soulbound-%{_p}%"
	set {_ret::2} to {_t}
	set {_ret::3} to {_m}
	set {_ret::4} to {_s}
	return {_ret::*}
function goldbar(r: number, p: player, b: block):
	if {_p} has enough space for gold ingot named "<gold>Gold Bar" with lore "&5Material:gold":
		if item amount of {_p}'s tool is {_r}:
			set {_p}'s held item to air
		else:
			remove {_r} from item amount of {_p}'s tool
		send "Crafting <gold>Gold Bar" to {_p}
		loop {@waitfor} * 2 times:
			wait for 10 ticks
			play sound "block.anvil.place" with volume 1 and pitch 1 at {_b}'s location for all players
			play lava pop on {_b}
		play mob spawner flames on {_b}
		set {_i} to 1 gold ingot named "<gold>Gold Bar" with lore "&5Material:gold"
		add {_i} to the inventory of {_p} 
		send "Successfuly crafted a <gold>Gold Bar" to {_p}
	else:
		send "You dont have enough space for a <gold>Gold bar" to {_p}
function ironbar(r: number, p: player, b: block):
	if {_p} has enough space for iron ingot named "<gold>Iron Bar" with lore "&5Material:iron":
		if item amount of {_p}'s tool is {_r}:
			set {_p}'s held item to air
		else:
			remove {_r} from item amount of {_p}'s tool
		send "Crafting <gold>Iron Bar" to {_p}
		loop {@waitfor} * 2 times:
			wait for 10 ticks
			play sound "block.anvil.place" with volume 1 and pitch 1 at {_b}'s location for all players
			play lava pop on {_b}
		play mob spawner flames on {_b}
		set {_i} to 1 iron ingot named "<gold>Iron Bar" with lore "&5Material:iron"
		add {_i} to the inventory of {_p} 
		send "Successfuly crafted a <gold>Iron Bar" to {_p}
	else:
		send "You dont have enough space for a <gold>Iron bar" to {_p}
function diamondplate(r: number, p: player, b: block):
	if {_p} has enough space for diamond named "<gold>Diamond Plate" with lore "&5Material:diamond":
		if item amount of {_p}'s tool is {_r}:
			set {_p}'s held item to air
		else:
			remove {_r} from item amount of {_p}'s tool
		send "Crafting <gold>Diamond Plate" to {_p}
		loop {@waitfor} * 2 times:
			wait for 10 ticks
			play sound "block.anvil.place" with volume 1 and pitch 1 at {_b}'s location for all players
			play lava pop on {_b}
		play mob spawner flames on {_b}
		set {_i} to 1 diamond named "<gold>Diamond Plate" with lore "&5Material:diamond"
		add {_i} to the inventory of {_p} 
		send "Successfuly crafted a <gold>Diamond Plate" to {_p}
	else:
		send "You dont have enough space for a <gold>Iron bar" to {_p}
function crystal(r: number, p: player, b: block):
	if {_p} has enough space for blue glass block named "<blue>Mana Stone":
		if item amount of {_p}'s tool is {_r}:
			set {_p}'s held item to air
		else:
			remove {_r} from item amount of {_p}'s tool
		send "Crafting <blue>Mana Stone" to {_p}
		loop {@waitforc} times:
			wait for 1 second
			play sound "entity.experience_orb.pickup" with volume 1 and pitch 2 at {_b}'s location for all players
			play 2 magical critical hit on {_b}
		play mob spawner flames on {_b}
		add 1 blue glass block named "<blue>Mana Stone" to the inventory of {_p} 
		send "Successfuly crafted a <blue>Mana Stone" to {_p}

#
# CRAFT UTILITY
#
function checkBlock(m: block, s: item) :: block:
	if the block north of {_m} is {_s}:
		return block north of {_m}
	else if the block south of {_m} is {_s}:
		return block south of {_m}
	else if the block east of {_m} is {_s}:
		return block east of {_m}
	else if the block west of {_m} is {_s}:
		return block west of {_m}

	